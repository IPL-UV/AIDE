# Configuration file
name: 'AIDE'
# Addressed task, choices: Classification, OutlierDetection
task: 'OutlierDetection'
# Use a previously saved model to skip train phase
from_scratch: true
# Path to the best model, required if from_scrath: false
best_run_path: ""
# Directory to save model outputs and results
save_path: "experiments/"
 
# Database and DataLoader definition
data:
    name: 'DroughtED' 
    data_dim: 1 # Data dimension
    num_classes: 2 # Number of categories
    class_bound: 1 # Threshold to binarise
    root: './databases/DroughtED' # Database root
    data_file: 'data' # Database folder inside database root
    input_size_train: 2 # Number of input features
    window_size: 1 # How many days in the past as input (default: 1)
    features: # ECVs included in the database
        - 'PRECTOT' 
        - 'PS'
        - 'QV2M'
        - 'T2M'
        - 'T2MDEW'
        - 'T2MWET'
        - 'T2M_MAX'
        - 'T2M_MIN'
        - 'T2M_RANGE'
        - 'TS'
        - 'WS10M'
        - 'WS10M_MAX'
        - 'WS10M_MIN'
        - 'WS10M_RANGE'
        - 'WS50M'
        - 'WS50M_MAX'
        - 'WS50M_MIN'
        - 'WS50M_RANGE'
    features_selected: [1,3] # ECVs selected
    train_slice:
        start: '2018-01-01'
        end: '2018-12-31'
    val_slice:
        start: '2019-01-01'
        end: '2019-12-31'
    test_slice:
        start: '2020-01-01'
        end: '2020-12-31'

# Architecture definition
arch:
    # Select user-defined model (true/false)
    user_defined: false
    # Type of architecture to be used (e.g., 'UNET')
    type: 'knn.KNN'
    # Parameters to configure the architecture
    args:
        contamination: 0.1
        n_neighbors: 1
        method: 'largest'
        radius: 1.0
        algorithm: 'auto'
        leaf_size: 10
        metric: 'minkowski'
        p: 2
        metric_params: null
        n_jobs: 1
    
    # Model input dimension (1: 1D, 2: 2D)
    input_model_dim: 1
    # Model output dimension (1: 1D, 2: 2D)
    output_model_dim: 1
    # Select 1 out of 100 samples for training or evaluation purposes
    step_samples_train: 5000
    step_samples_evaluation: 2000

# Definition of the training stage
implementation:
    # Definition of Pytorch trainer
    trainer:  
        batch_size: 8 # Batch size
    # Definition of Pytorch data loader
    data_loader: 
        num_workers: 16

# Visualization
evaluation:  

    metrics:
        roc_auc_score: {probabilities: True}
        accuracy_score: {probabilities: False}
        recall_score: {probabilities: False}
        average_precision_score: {probabilities: False}
        precision_score: {probabilities: False}

    visualization:
        activate: true
